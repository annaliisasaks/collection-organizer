name: Deployment action
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci and test
        run: |
          cd frontend/
          npm ci
          npm run test
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test    
    steps:
      - name: Configure SSH
        run: |
            mkdir -p ~/.ssh/
            echo "$SSH_KEY" > ~/.ssh/deploy.key
            chmod 600 ~/.ssh/deploy.key
            cat >>~/.ssh/config <<END
            Host deploy
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/deploy.key
              StrictHostKeyChecking no
            END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Fetch repo
        run: ssh deploy 'cd collection-organizer && git fetch && git reset --hard origin/main'    
      - name: Pull down old docker
        run: ssh deploy 'cd collection-organizer && docker-compose down'
      - name: Put up new docker
        run: ssh deploy 'cd collection-organizer && docker-compose up --build --force-recreate --remove-orphans -d'  